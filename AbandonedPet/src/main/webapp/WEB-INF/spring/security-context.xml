<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- form-login은 기본 로그인 폼 양식을 보여준다.logout은 로그아웃처리를.. -->

	<security:http>
		<security:intercept-url pattern="/admin/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<security:intercept-url pattern="/member/**"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')" />
		
		<security:intercept-url pattern="/login" access="isAnonymous()"  />
        <!-- <security:intercept-url pattern="/user/logout" access="isAuthenticated()"/> -->
			
		<security:intercept-url pattern="/**"
			access="permitAll" />
			
		<!-- 로그인 페이지 지정 및 로그인 성공 시 처리 지정 -->
		<!--<security:form-login login-page="/customLogin" authentication-success-handler-ref="/customLoginSuccess" 
			/> -->
	
		<security:form-login login-page="/login" />

		<!-- 로그인은 했지만 권한이 없는 사용자의 경우 보낼 페이지 -->
		<security:access-denied-handler error-page="/main" />

		<!-- 로그아웃 처리 지정 -->
		<security:logout logout-url="/logout"
			logout-success-url="/login?logout" invalidate-session="true"
			delete-cookies="JSESSIONID" />
		<security:csrf />
		<!-- 접근 불가 메시지 설정 -->
		<!--<security:access-denied-handler ref="customAccessDenied"/> -->
	</security:http>

	<!-- 암호화를 위한 passwordEncoder -->
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username, password, enabled from member where username=?"
				authorities-by-username-query="select username, authority from member where username=?" />
			<security:password-encoder
				ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>


</beans>